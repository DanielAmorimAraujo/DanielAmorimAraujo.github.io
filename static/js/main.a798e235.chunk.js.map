{"version":3,"sources":["assets/dropper.png","assets/roameo.jpg","assets/profile-picture-faded.png","assets/elephant.gif","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RoameoDemo","decoratedOnClick","useAccordionToggle","id","className","onClick","ProjectModal","type","props","Modal","size","centered","Header","closeButton","Title","href","target","rel","Body","Accordion","defaultActiveKey","Collapse","eventKey","src","width","height","title","Footer","Button","onHide","Project","React","useState","modalShow","setModalShow","Card","Img","variant","Dropper","Roameo","undefined","show","Projects","CardColumns","ProfileIcon","name","link","Col","OverlayTrigger","placement","overlay","Tooltip","Profile","Row","xs","sm","Image","ProfilePicture","ElephantWalking","noGutters","Intro","SiteBuilding","role","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a798e235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dropper.ecb14789.png\";","module.exports = __webpack_public_path__ + \"static/media/roameo.c2183191.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-faded.1f2f8a78.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.fc110275.gif\";","import React from 'react';\r\n\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\n\r\n/* Project Images */\r\nimport Dropper from './assets/dropper.png';\r\nimport Roameo from './assets/roameo.jpg';\r\n\r\nconst RoameoDemo = () => {\r\n  const decoratedOnClick = useAccordionToggle(\"0\");\r\n\r\n  return <span id=\"roameo-demo-btn\" className=\"text-link\" onClick={decoratedOnClick}>demo</span>;\r\n}\r\n\r\nconst ProjectModal = ({ type, ...props }) => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {type}\r\n          <a\r\n            href={\r\n              type === 'Dropper' ? \"https://github.com/DanielAmorimAraujo/Dropper-Game\"\r\n                : type === 'Roameo' ? \"https://github.com/DanielAmorimAraujo/Travelbook\"\r\n                  : \"https://github.com/DanielAmorimAraujo\"}\r\n            className=\"fas fa-external-link-alt project-icon\" target=\"_blank\" rel=\"noopener noreferrer\"><span></span></a>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {type === 'Dropper' && (\r\n          <p>\r\n            Dropper is a single-player game where the objective is to keep the red square on the screen by navigating through gaps in moving floors. Coins randomly generated around the screen can be collected along the way to add to your score.<br /><br />\r\n            It was coded and designed in Java using Android Studio. The game constantly updates using a game thread while game objects are drawn using a canvas. The game is currently still under development as new features, bug fixes, and a redesign is being worked on.<br /><br />\r\n            Feel free to <a className=\"text-link\" href=\"https://github.com/DanielAmorimAraujo/Dropper-Game/releases/latest/download/dropper.apk\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a> the game (Android).<br /><br />\r\n            Future developmenets:\r\n          <ul>\r\n              <li>\r\n                add power-ups\r\n            </li>\r\n              <li>\r\n                add a shop\r\n            </li>\r\n              <li>\r\n                redesign look\r\n            </li>\r\n            </ul>\r\n          </p>\r\n        )}\r\n        {type === 'Roameo' && (\r\n          <>\r\n            <p>\r\n              Roameo (previously named Travelbook), is a travel website used to allow multiple users to plan a trip at once. Using the Google Maps api, users are able to select a destination and add it to their calendar. It also hosts a Facebook Messenger bot (beta) to help users pick destinations.<br /><br />\r\n              This projet was created during a hackathon using Javascript, HTML/CSS, and Firestore.<br /><br />\r\n              Check out the <a className=\"text-link\" href=\"https://danielaraujo.dev/Travelbook/\" target=\"_blank\" rel=\"noopener noreferrer\">site</a>.<br /><br />\r\n              <span className=\"text-note\">\r\n                <Accordion defaultActiveKey={null}>\r\n                Note: due to the Google Maps api key expiring and costing money, the site is currently disabled. Feel free to check out a{\" \"}\r\n                  <RoameoDemo />\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <iframe src=\"https://drive.google.com/file/d/18L1ZgJ-T3eef8nMnN5UGUTH73CfK8PF4/preview\" width=\"640\" height=\"480\" title=\"Roameo Demo\"></iframe>\r\n                  </Accordion.Collapse>\r\n                </Accordion>\r\n              </span>\r\n            </p>\r\n          </>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal >\r\n  );\r\n}\r\n\r\nconst Project = ({ type }) => {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Card onClick={() => setModalShow(true)}>\r\n        <div className=\"card-image-container\">\r\n          <Card.Img variant=\"top\"\r\n            src={type === 'Dropper' ? Dropper : type === 'Roameo' ? Roameo : undefined} />\r\n          <div className=\"caption\">\r\n            <p>Learn more</p>\r\n          </div>\r\n        </div>\r\n        <Card.Footer>{type}</Card.Footer>\r\n      </Card>\r\n\r\n      <ProjectModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        type={type}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <>\r\n      <h2>projects</h2>\r\n\r\n      <CardColumns>\r\n        <Project type=\"Dropper\" />\r\n        <Project type=\"Roameo\" />\r\n      </CardColumns>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport Projects from './Projects';\r\n\r\nimport ProfilePicture from './assets/profile-picture-faded.png';\r\n\r\nimport ElephantWalking from './assets/elephant.gif';\r\n\r\nconst ProfileIcon = ({ name, className, link }) => {\r\n  return (\r\n    <Col>\r\n      <span className=\"individual-icons\">\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {name}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <a href={link} className={className} target=\"_blank\" rel=\"noopener noreferrer\"><span></span></a>\r\n        </OverlayTrigger>\r\n      </span>\r\n    </Col>\r\n\r\n  );\r\n}\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <Row id=\"profile\">\r\n        <Col xs=\"12\" sm=\"5\">\r\n          <Image src={ProfilePicture} id=\"profile-pic\" />\r\n          <div id=\"elephant-wrapper\">\r\n            <Image id=\"elephant\" src={ElephantWalking}/>\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"auto\" sm=\"7\" id=\"profile-info\">\r\n          <p>hi,<br />\r\n            I'm <span id=\"name\">daniel araujo</span>\r\n          </p>\r\n          <Row id=\"icons\" noGutters>\r\n            <ProfileIcon name=\"Resume\" className=\"far fa-file\" link=\"https://danielaraujo.dev/resume\" />\r\n            <ProfileIcon name=\"GitHub\" className=\"fab fa-github\" link=\"https://github.com/DanielAmorimAraujo\" />\r\n            <ProfileIcon name=\"LinkedIn\" className=\"fab fa-linkedin\" link=\"https://linkedin.com/in/DanielAmorimAraujo\" />\r\n            <ProfileIcon name=\"Email\" className=\"far fa-envelope\" link=\"mailto:daniel.amorim.araujo@gmail.com\" />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Intro = () => {\r\n  return (\r\n    <p id=\"intro\">\r\n      I am a second-year Computer Science student attending the University of Waterloo, who is passionate about all things\r\n      coding and loves solving difficult problems. This is my personal website, where I'll have projects and other stuff\r\n      about me, so enjoy your time here. For a more professional and in-depth evaluation, make sure to check out\r\n      my <a className=\"text-link\" href=\"https://danielaraujo.dev/resume\" target=\"_blank\" rel=\"noopener noreferrer\">resume</a> and <a className=\"text-link\" href=\"https://linkedin.com/in/DanielAmorimAraujo\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>.\r\n      Also, feel free to contact me via <a className=\"text-link\" href=\"mailto:daniel.amorim.araujo@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">email</a>.\r\n    </p>\r\n  )\r\n}\r\n\r\nconst SiteBuilding = () => {\r\n  return (\r\n    <div id=\"site-building\">\r\n      <p><span role=\"img\" aria-label=\"construction sign\">🚧</span> Site still under construction. Stay tuned. <span role=\"img\" aria-label=\"construction sign\">🚧</span></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <main role=\"main\">\r\n        <Profile />\r\n        <Intro />\r\n        <Projects />\r\n        <SiteBuilding />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}